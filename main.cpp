#include <iomanip>
#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <type_traits>

const char * HELP_TEXT = "\x55\x73\x61\x67\x65\x3a\x0a\x3c\x79\x6f\x75\x72\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x79\x27\x73\x20\x70\x61\x74\x68\x3e\x20\x3c\x73\x6f\x75\x72\x63\x65\x20\x66\x69\x6c\x65\x20\x6e\x61\x6d\x65\x3e\x20\x5b\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x6e\x61\x6d\x65\x5d\x0a\x0a\x28\x22\x3c\x3e\x22\x20\x6d\x65\x61\x6e\x73\x20\x72\x65\x71\x75\x69\x72\x65\x73\x20\x61\x6e\x64\x20\x22\x5b\x5d\x22\x20\x6d\x65\x61\x6e\x73\x20\x6f\x70\x74\x69\x6f\x6e\x61\x6c\x29\x0a\x46\x6f\x72\x20\x65\x78\x61\x6d\x70\x6c\x65\x3a\x0a\x62\x69\x6e\x2f\x63\x6f\x6e\x73\x74\x61\x6e\x74\x79\x20\x68\x65\x6c\x70\x5f\x74\x65\x78\x74\x20\x48\x45\x4c\x50\x5f\x54\x45\x58\x54\x0a\x28\x49\x20\x75\x73\x65\x64\x20\x74\x68\x69\x73\x20\x77\x68\x65\x6e\x20\x49\x27\x6d\x20\x67\x65\x6e\x65\x72\x61\x74\x69\x6e\x67\x20\x74\x68\x65\x20\x63\x6f\x6e\x73\x74\x61\x6e\x74\x20\x73\x74\x72\x69\x6e\x67\x20\x6f\x66\x20\x74\x68\x69\x73\x20\x75\x73\x61\x67\x65\x29\x0a";

int main(int argc, char** argv) {
	if(argc == 3) {
		std::string path = argv[1];
		std::string constant_name = argv[2];
		std::ifstream fin(path);
		if(!fin.is_open()) {
			std::cerr << "Cannot open file " << argv[1];
			return -1;
		}
		std::string output = constant_name + " = \"";
		while(!fin.eof()) {
			std::stringstream converter;
			char current = fin.get();
			if(fin.eof()) {
				break;
			}
			converter << std::hex << std::setw(2) << std::setfill('0') << (int)current;
			output += std::string("\\x") + converter.str();
		}
		std::cout << output << "\"";
	} else if(argc == 2) {
		std::string path = argv[1];
		std::ifstream fin(path);
		if(!fin.is_open()) {
			std::cerr << "Cannot open file " << argv[1];
			return -1;
		}
		std::string output = "\"";
		while(!fin.eof()) {
			std::stringstream converter;
			char current = fin.get();
			if(fin.eof()) {
				break;
			}
			converter << std::hex << std::setw(2) << std::setfill('0') << (int)current;
			output += std::string("\\x") + converter.str();
		}
		std::cout << output << "\"";
	} else {
		std::cerr << HELP_TEXT;
	}
	return 0;
}

